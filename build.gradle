plugins {
    id 'fabric-loom' version '1.0-SNAPSHOT'
    id "com.modrinth.minotaur" version "2.+"
}

version = project.mod_version
group = project.maven_group

repositories {
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings loom.officialMojangMappings()
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
    }

processResources {
    inputs.property "version", project.version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

def targetJavaVersion = 17
tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        it.options.release = targetJavaVersion
    }
}

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
    archivesBaseName = project.archives_base_name + "-" + project.minecraft_version
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}"}
    }
}

modrinth {

    if (project.hasProperty('modrinth.apikey')) { // $GRADLE_USER_HOME/gradle.properties
        token = getProperty("modrinth.apikey") // Use an environment property!
        projectId = 'PYmVLddY'
        versionNumber = version
        versionName = "Make Minecraft Music Great Again $version (MC 1.20.1)"
        uploadFile = remapJar
        changelog = project.changelog
        gameVersions = ['1.20','1.20.1']
        loaders = ["fabric"]
        versionType = "RELEASE"
    }
}
task release{

}
tasks.release.dependsOn(tasks.build, tasks.modrinth)