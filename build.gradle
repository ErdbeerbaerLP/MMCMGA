buildscript {
    repositories {
        maven {
            name = 'sponge'
            url = 'https://repo.spongepowered.org/maven'
        }
        maven { url = "https://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '6+', changing: true
    }
}
plugins {
    id 'idea'
    id "com.modrinth.minotaur" version "2.+"
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.spongepowered.mixin'

version = project.mod_version
group = project.maven_group
base {
    archivesName = "mmcmga"
}

minecraft {
    mappings channel: mapping_channel, version: mapping_version
    copyIdeResources = true
}

repositories {
}

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"
    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
}

sourceSets.main.resources { srcDir 'src/generated/resources' }
def targetJavaVersion = 17
tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        it.options.release = targetJavaVersion
    }
}

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
    archivesBaseName = project.archives_base_name + "-" + project.minecraft_version + "-forge"
}



mixin {
    add sourceSets.main, 'mixins.mmcmga.refmap.json'
    config 'mixins.mmcmga.json'
}

modrinth {

    if (project.hasProperty('modrinth.apikey')) { // $GRADLE_USER_HOME/gradle.properties
        token = getProperty("modrinth.apikey") // Use an environment property!
        projectId = 'PYmVLddY'
        versionNumber = version
        versionName = "Make Minecraft Music Great Again $version (MC $minecraft_version Forge)"
        uploadFile = jar
        changelog = project.changelog
        gameVersions = ['1.20.1', '1.20.2']
        loaders = ["forge"]
        versionType = "RELEASE"
    }
}
task release {

}
tasks.release.dependsOn(tasks.build, tasks.modrinth)